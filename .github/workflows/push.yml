name: deploy

on:
  push:
    branches:
      - "*"
    tags:
      - "*"

env:
  DOCKER_IMAGE: "${{ vars.DOCKER_REPO }}/${{ vars.ORGANIZATION_NAME }}-${{ github.event.repository.name }}" # wmw9/blossom-front
  TAG: "${{ vars.DOCKER_REPO }}/${{ vars.ORGANIZATION_NAME }}-${{ github.event.repository.name }}:${{ github.ref_name }}"
  VERSION_TAG: "${{ github.ref_name }}-${{ github.run_number }}"
  BRANCH_TAG: "${{ vars.DOCKER_REPO }}/${{ vars.ORGANIZATION_NAME }}-${{ github.event.repository.name }}:${{ github.ref_name }}-${{ github.run_number }}"
  LATEST_TAG: "${{ vars.DOCKER_REPO }}/${{ vars.ORGANIZATION_NAME }}-${{ github.event.repository.name }}:latest"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - run: npm install -g yarn
    - run: yarn install --frozen-lockfile

    - run: NODE_ENV=test yarn build
      if: ${{ github.ref == 'refs/heads/develop' }}

    - run: yarn build
      if: ${{ github.ref == 'refs/heads/main' }}
        

  deploy:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
          # tags: |
          #   type=ref,event=branch
          #   type=ref,event=tag
          #   type=semver,pattern={{raw}}

      - name: Build and push (main)
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ env.VERSION_TAG }}
          cache-from: type=registry,ref=${{env.LATEST_TAG}}
          cache-to: type=registry,ref=${{env.LATEST_TAG}},mode=max

        
      # - name: Build and push (develop)
      #   if: ${{ github.ref == 'refs/heads/develop' }}
      #   id: docker_build_develop
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     build-args: |
      #       VERSION=${{ env.VERSION_TAG }}
      #     cache-from: type=registry,ref=${{env.LATEST_TAG}}
      #     cache-to: type=registry,ref=${{env.LATEST_TAG}},mode=max